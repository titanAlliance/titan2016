// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5536.Titan2016.subsystems;

import org.usfirst.frc5536.Titan2016.Robot;
import org.usfirst.frc5536.Titan2016.RobotMap;
import org.usfirst.frc5536.Titan2016.commands.*;

import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class driveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController leftFrontMotor = RobotMap.driveTrainleftFrontMotor;
    private final SpeedController leftRearMotor = RobotMap.driveTrainleftRearMotor;
    private final SpeedController rightFrontMotor = RobotMap.driveTrainrightFrontMotor;
    private final SpeedController rightRearMotor = RobotMap.driveTrainrightRearMotor;
    private final RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    private final Ultrasonic ultraSonic1 = RobotMap.driveTrainultraSonic1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final ADXRS450_Gyro gyro = RobotMap.driveTrainGyro;
    double Kp = 0.05;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new driveWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        ultraSonic1.setAutomaticMode(true);
        
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
	public void takeJoystickInputs(double left, double right) {
	    	SmartDashboard.putNumber("Distance to Object", ultraSonic1.getRangeInches());
	        SmartDashboard.putNumber("Angle", gyro.getAngle());
	        robotDrive.tankDrive(left, right);
	}
	
	public void resetGyro(){
		gyro.reset();
	}
	
	public double getGyroAngle(){
		double angle = gyro.getAngle();
		return angle;
	}
	
	public void driveForwardAuto() {
		double angle = getGyroAngle();
    	double turnValue = (0.0 - angle) * Kp;
    	//Drive Fwd 
    	robotDrive.tankDrive(-.55 - turnValue, -.55 + turnValue);
	}
	
	public boolean distanceAuto(double distance){
		boolean distanceCheck;
		
		if(ultraSonic1.getRangeInches() > distance){
			distanceCheck = false;
		} else {
			distanceCheck = true;
		}
		
		return distanceCheck;
	}
	
	public void turn(double left, double right) {
    	robotDrive.tankDrive(left, right);
	}
	
	public boolean checkAngle(double angle){
		 boolean test;
		 
		 if(Robot.driveTrain.getGyroAngle() < angle){
			 test = false;
		 } else {
			 test = true;
		 }
		 
		 return test;
	}
	
	public boolean checkNegAngle(double angle){
		 boolean test;
		 
		 if(Robot.driveTrain.getGyroAngle() > angle){
			 test = false;
		 } else {
			 test = true;
		 }
		 
		 return test;
	}

	public void stop() {
		robotDrive.tankDrive(0, 0);
	}
}

